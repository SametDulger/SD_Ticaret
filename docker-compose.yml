version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - sdticaret-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q 'SELECT 1' -b -o /dev/null"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 30s

  # SDTicaret API
  sdticaret-api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=SDTicaretDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true
      - Jwt__Secret=your-super-secret-key-with-at-least-32-characters-for-jwt-signing
      - Jwt__Issuer=SDTicaretAPI
      - Jwt__Audience=SDTicaretClient
      - Jwt__ExpiryInHours=1
    ports:
      - "7244:80"
      - "7443:443"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - sdticaret-network
    volumes:
      - ./Logs:/app/Logs
    restart: unless-stopped

volumes:
  sqlserver_data:
    driver: local

networks:
  sdticaret-network:
    driver: bridge 